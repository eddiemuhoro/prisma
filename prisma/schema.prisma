// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employee {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  email      String   @unique
  password   String
  profilePic String   @default("https://firebasestorage.googleapis.com/v0/b/apt-rite-346310.appspot.com/o/profile.jpg?alt=media&token=71a31f30-11ee-49b9-913c-b3682d3f6ea7")
  phone      String?
  bid bid[]
 
}

model employer {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  secondName String?
  email      String   @unique
  password   String
  profilePic String   @default("https://firebasestorage.googleapis.com/v0/b/apt-rite-346310.appspot.com/o/profile.jpg?alt=media&token=71a31f30-11ee-49b9-913c-b3682d3f6ea7")
  phone      String?
  job job[]
}

model job {
  id                String   @id @default(uuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  title             String
  description       String?
  skills            String[]
  employerId        String
  belongsToEmployer employer @relation(fields: [employerId], references: [id] )
  bid bid[]

}

model bid {
  id                String      @id @default(uuid())
  description       String
  name              String
  belongToEmployee  String
  job               String
  isSelected     Boolean  @default(false)
  belongsToEmployee employee @relation(fields: [belongToEmployee], references: [id], onDelete: Cascade, onUpdate: Cascade)
  belongToJob       String    
  belongsToJob      job      @relation(fields: [belongToJob], references: [id], onDelete: Cascade, onUpdate: Cascade)
  // @@id([belongToEmployee, belongToJob])
}

